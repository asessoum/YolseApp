entity Region {
	regionID Integer required
	nomRegion String required maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPpar String
}

entity Province {
	provinceID Integer required
	nomProvince String required maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity Commune {
	communeID Integer required
	nomCommune String required maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity Profil {
	profilID Integer required
	libelle String required maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity TypeEngrais {
	engraisID Integer required
	libelle String required maxlength(20)
    prixUnitaire Double
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity TypeCulture {
	engraisID Integer required
	libelle String required maxlength(20)
    prixCession Double
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity Langue {
	langueID Integer required
	libelle String required maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity User {
	userID Integer required
	login String required maxlength(6)
    mdp String required maxlength(8)
    nom String required maxlength(20)
    prenom String required maxlength(20)
    naissance Instant
    genre Genre required
    tel1 Integer
    tel2 Integer
    email String
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity UtiProfil {
	utiProID Integer required
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity Client {
	clientID String required maxlength(13)
    nom String required maxlength(20)
    prenom String required maxlength(20)
    naissance Instant required
    genre Genre required
    estMarie Boolean required
    numCin Integer required
    validCin Instant required
    village String required maxlength(20)
    tel1 Integer required
    tel2 Integer
    email String maxlength(50)
    orgaProd String maxlength(50)
    photoID String maxlength(200)
    tMenage Integer maxlength(2)
    nomPerAPr String maxlength(20)
    prenomPerAPr String maxlength(20)
    telPerAPr Integer maxlength(20)
    superfice Double required
    qSemence Double required
    mSimm Double required
    valTotal Double required
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity EngraisClient {
	engCliID Integer required
    qEngrais Double required
    pTotEngr Double required
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity BesoinIntrant {
	besIntID Integer required
    mAdhesion Double required
    mAssur Double required
    mGaran Double required
    stockGar Integer required
    magasin String required maxlength(50)
    sfd String required maxlength(50)
    mUniGes Double required
    mAdmin Double required
    mExploi Double required
    validSup Boolean
    validRes Boolean
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity SuiviChamps {
	suiviID Integer required
   	dVisit Instant required
    emplac String required maxlength(50)
    obs String maxlength(4000)
    dosImg String maxlength(200)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}


enum Genre {
    HOMME, FEMME
}

relationship OneToMany {
	BesoinIntrant{engraisClient} to EngraisClient{besoinIntrants}
    BesoinIntrant{typeCulture} to TypeCulture{engraisClients}
}

relationship OneToMany {
	SuiviChamps{client} to Client{suiviChamps}
}

relationship OneToMany {
	User{typeCulture} to TypeCulture{users}
}

relationship OneToMany {
	EngraisClient{client} to Client{engraisClients}
    EngraisClient{typeEngrais} to TypeEngrais{engraisClients}
}

relationship OneToMany {
	User{typeCulture} to TypeCulture{users}
}

relationship OneToMany {
	User{client} to Client{users}
}

relationship OneToMany {
	User{langue} to Langue{users}
}

relationship OneToMany {
	UtiProfil{user} to User{profils}
    UtiProfil{profil} to Profil{users}
}

relationship OneToMany {
	User{commune} to Commune{users}
}

relationship OneToMany {
	Province{region} to Region{provinces}
}

relationship OneToMany {
	Commune{province} to Province{communes}
}

// Set pagination options
paginate Client, BesoinIntrant, SuiviChamps, EngraisClient with infinite-scroll

dto * with mapstruct

// Set service options to all except few
service all with serviceImpl except Employee, Job
// Set an angular suffix
angularSuffix * with mySuffix
