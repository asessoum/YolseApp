entity Region {
	regionID Integer required
	nomRegion String required maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPpar String
}

entity Province {
	provinceID Integer required
	nomProvince String required maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship OneToMany {
    Province{region} to Region{provinces}
}

entity Commune {
	communeID Integer required
	nomCommune String required maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship OneToMany {
    Commune{province} to Province{communes}
}

entity Engrais {
	engraisID Integer required
	libelle String required maxlength(20)
    prixUnitaire Double
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity Culture {
	engraisID Integer required
	libelle String required maxlength(20)
    prixCession Double 
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity Langue {
	langueID Integer required
	libelle String required maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity Reference {
	idRef Integer required
	libelleRef String required maxlength(10)
    valeurRef String required maxlength(100)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity Profile {
	profileID Integer required
	libelle String required maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity Utilisateur {
	userID Integer required
	login String required maxlength(6)
    mdp String required maxlength(8)
    nom String required maxlength(20)
    prenom String required maxlength(20)
    dateNaiss Instant required
    genre Genre required
    tel String required maxlength(10)
    email String maxlength(50)
    numCIN String required maxlength(20)
    validiteCIN Date required
    nomPAP String
    prenomPAP String
    telPAP String
    lienPAP String 
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship OneToMany {
    Utilisateur{langue} to Langue{utilisateurs}
    Utilisateur{commune} to Commune{utilisateurs}
    Utilisateur{responsable} to Utilisateur{agents}
}

entity UtiProfile {
	utiProID Integer required
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship OneToMany {
    UtiProfile{utilisateur} to Utilisateur{profiles}
    UtiProfile{profile} to Profile{utilisateurs}
}

entity Client {
	clientID String required maxlength(13)
    nom String required maxlength(20)
    prenom String required maxlength(20)
    naissance Instant required
    genre Genre required
    estMarie Boolean required
    numCIN String required maxlength(20)
    validiteCIN Instant required
    village String required maxlength(20)
    tel String required maxlength(10)
    email String maxlength(50)
    groupe String maxlength(50)
    photoID String maxlength(200)
    tailleMenage Integer required
    superficiePos Double required
    nomPAP String maxlength(20)
    prenomPAP String maxlength(20)
    telPAP String maxlength(10)
    lienPAP String maxlength(10)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship OneToMany {
    Client{langue} to Langue{clients}
    Client{utilisateur} to Utilisateur{clients}
    Client{commune} to Commune{clients}
}

entity BesoinIntrant {
	besIntID Integer required
    superficieEsc Double required
    qSemence Double required
    valeurTot Double required
    mAdhesion Double required
    mAssur Double required
    mGaran Double required
    qStockGar Double required
    magasinStock String required maxlength(50)
    sfd String required maxlength(50)
    mUniGes Double required
    mAdmin Double required
    mExploi Double required
    validSup Boolean
    validRes Boolean
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship OneToMany {
    BesoinIntrant{client} to Client{besoinIntrants}
    BesoinIntrant{cultureEsc} to Culture{besoinsIntrantsEsc}
    BesoinIntrant{cultureGar} to Culture{besoinsIntrantsGar}
}

entity BesoinEngrais {
    qEngrais Double required
    pTotEngr Double required
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship OneToMany {
    BesoinEngrais{besoinIntrant} to BesoinIntrant{besoinEngrais}
    BesoinEngrais{engrais} to Engrais{besoinEngrais}
}

entity SuiviChamps {
	suiviID Integer required
   	dVisit Instant required
    emplac String required maxlength(50)
    obsAgent String maxlength(1000)
    obsRes String maxlength(2000)
    dosImg String maxlength(200)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship OneToMany {
	SuiviChamps{client} to Client{suiviChamps}
    SuiviChamps{utilisateur} to Utilisateur{suiviChamps}
    SuiviChamps{commune} to Commune{suiviChamps}
}

enum Genre {
    HOMME, FEMME
}

// Set pagination options
paginate Client, BesoinIntrant, SuiviChamps, BesoinClient, Utilisateur with infinite-scroll

dto * with mapstruct

// Set service options to all except few
service all with serviceImpl
// Set an angular suffix
angularSuffix * with mySuffix
