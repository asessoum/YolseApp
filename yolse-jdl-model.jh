entity Pays {
	paysID Integer required
    nomPays String required maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity Commune {
	communeID Integer required
	nomCommune String required maxlength(20)
    nomProvince String maxlength(20)
    nomRegion String maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship ManyToOne {
    Commune{pays} to Pays{communes}
}

entity Categorie {
	categorieID Integer required
    localID Integer required
    remoteID Integer required
	libelle String required maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity Article {
	articleID String required maxlength(10)
	localID Integer required
    remoteID Integer required
	libelle String required maxlength(20)
    description String maxlength(200)
    prixDeVente Double
    prixDeRevient Double
    margeBrute Double
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship ManyToOne {
    Article{categorie} to Categorie{articles}
}

entity Langue {
	langueID Integer required
	libelle String required maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity Reference {
	idRef Integer required
	libelleRef String required maxlength(10)
    valeurRef String required maxlength(100)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity Profile {
	profileID Integer required
	libelle String required maxlength(20)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

entity Utilisateur {
	userID Integer required
	login String required maxlength(6)
    mdp String required maxlength(8)
    nom String required maxlength(20)
    prenom String required maxlength(20)
    dateNaiss Instant required
    genre Genre required
    tel String required maxlength(10)
    email String maxlength(50)
    numCarteUti String required maxlength(20)
    dateCarteUti Instant
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship ManyToOne {
    Utilisateur{langue} to Langue{utilisateurs}
    Utilisateur{commune} to Commune{utilisateurs}
    Utilisateur{responsable} to Utilisateur{employes}
}

entity UtiProfile {
	utiProID Integer required
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship ManyToOne {
    UtiProfile{utilisateur} to Utilisateur{profiles}
    UtiProfile{profile} to Profile{utilisateurs}
}

entity Client {
	clientID String required maxlength(13)
    localID Integer required
    remoteID Integer required
    nom String required maxlength(20)
    prenom String required maxlength(20)
    naissance Instant required
    genre Genre required
    numCarteCli String required maxlength(20)
    dCarteUtil Instant required
    tel String required maxlength(10)
    email String maxlength(50)
    photoID String maxlength(200)
    infoSupplementaires String maxlength (500)
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship ManyToOne {
    Client{langue} to Langue{clients}
    Client{commercial} to Utilisateur{clients}
    Client{commune} to Commune{clients}
}

entity Transaction {
	transactionID Integer required
    localID Integer required
    remoteID Integer required
	venteID Integer required
    vendeurID Integer required
    quantiteTotal Double required
    prixTotalTransaction Double required
    validSup Boolean
    validRes Boolean
    estActif Boolean 
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship ManyToOne {
    Transaction{client} to Client{transactions}
    Transaction{vendeurID} to Utilisateur{transactions}
}

entity Vente {
	venteID Integer required
    localID Integer required
    remoteID Integer required
    quantite Double required
    prixVente Double required
    margeVente Double required
    creeLe Instant
    creePar String
    modifLe Instant
    modifPar String
}

relationship ManyToOne {
    Vente{transaction} to Transaction{ventes}
    Vente{article} to Article{ventes}
}

enum Genre {
    HOMME, FEMME
}

// Set pagination options
paginate Client, Transaction, Vente, Utilisateur with infinite-scroll

dto * with mapstruct

// Set service options to all except few
service all with serviceImpl
// Set an angular suffix
angularSuffix * with mySuffix
